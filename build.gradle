plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.globallogic.demo.app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
ext {
	jupiterVersion = '5.3.2'
}
repositories {
	mavenCentral()
}

dependencies {

	def excludeSpringBootStarterLogging = { exclude(group: 'org.springframework.boot', module: 'spring-boot-starter-logging') }
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation ('org.springframework.boot:spring-boot-starter-security', excludeSpringBootStarterLogging)
	implementation ('org.springframework.boot:spring-boot-starter-web', excludeSpringBootStarterLogging)
	compile('org.springframework.security.oauth:spring-security-oauth2:2.3.4.RELEASE', excludeSpringBootStarterLogging)
	compile('org.springframework.security:spring-security-jwt:1.0.10.RELEASE', excludeSpringBootStarterLogging)
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	} 
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
	testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')
	runtime('com.google.code.gson:gson:2.8.5')
	runtime('com.fasterxml.jackson.core:jackson-databind:2.9.6')
	runtime('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.6')
	testCompile group: 'org.mockito', name: 'mockito-core', version: '2.24.0'
	testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${jupiterVersion}"
	
}

test {
	useJUnitPlatform()
}
